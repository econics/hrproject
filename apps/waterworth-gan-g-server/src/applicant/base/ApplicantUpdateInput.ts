/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { InterviewUpdateManyWithoutApplicantsInput } from "./InterviewUpdateManyWithoutApplicantsInput";
import { JobPostingWhereUniqueInput } from "../../jobPosting/base/JobPostingWhereUniqueInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumApplicantStatus } from "./EnumApplicantStatus";

@InputType()
class ApplicantUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  appliedDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: () => InterviewUpdateManyWithoutApplicantsInput,
  })
  @ValidateNested()
  @Type(() => InterviewUpdateManyWithoutApplicantsInput)
  @IsOptional()
  @Field(() => InterviewUpdateManyWithoutApplicantsInput, {
    nullable: true,
  })
  interviews?: InterviewUpdateManyWithoutApplicantsInput;

  @ApiProperty({
    required: false,
    type: () => JobPostingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => JobPostingWhereUniqueInput)
  @IsOptional()
  @Field(() => JobPostingWhereUniqueInput, {
    nullable: true,
  })
  jobPosting?: JobPostingWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  resume?: InputJsonValue;

  @ApiProperty({
    required: false,
    enum: EnumApplicantStatus,
  })
  @IsEnum(EnumApplicantStatus)
  @IsOptional()
  @Field(() => EnumApplicantStatus, {
    nullable: true,
  })
  status?: "Option1" | null;
}

export { ApplicantUpdateInput as ApplicantUpdateInput };
